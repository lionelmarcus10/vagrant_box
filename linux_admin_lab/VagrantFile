# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  # Define the shared folder ( vbox mound point )
  host_shared_folder = "vbox_share"
  guest_mount_point = "/mnt/nfs"

  # Define the VMs with different IPs and hostnames
  vms = {
    "m1" => { ip: "192.168.58.2", hostname: "alpine-m1" },
    "m2" => { ip: "192.168.58.3", hostname: "alpine-m2" },
    "m3" => { ip: "192.168.58.4", hostname: "alpine-m3" }
  }

  # Ensure the host-side shared folder exists before starting Vagrant
  system("mkdir #{host_shared_folder}") unless File.directory?(host_shared_folder)

  vms.each do |name, settings|
    config.vm.define name do |device|
      puts "Configuring #{name}..."
      device.vm.box = "generic/alpine316"
      device.vm.network "private_network", ip: settings[:ip]
      device.vm.hostname = settings[:hostname]
      device.vm.boot_timeout = 600

      device.vm.provider "virtualbox" do |vb|
        vb.memory = "1024"
        vb.cpus = 4
        vb.linked_clone = true
      end

      # Vbox Shared Folder
      device.vm.synced_folder host_shared_folder, guest_mount_point, type: "virtualbox"

      device.vm.provision "shell", inline: <<-SHELL
        echo "Updating Alpine packages and installing required software..."
        apk update
        apk add setxkbmap iproute2 py3-pip nfs-utils
        pip install ansible
        ansible-galaxy collection install ansible.posix
        
        # Ensure /vagrant exists
        if [ ! -d "/vagrant" ]; then sudo mkdir /vagrant && sudo chmod -R 777 /vagrant; fi
      SHELL

      device.vm.provision "file", source: "playbook.yml", destination: "/vagrant/playbook.yml"
      device.vm.provision "ansible_local" do |ansible|
        ansible.playbook = "/vagrant/playbook.yml"
        ansible.become = true
      end
    end
  end

end
